(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{203:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var r=n(1),o=n(8),i=(n(0),n(250)),a={id:"modal",title:"Modal"},l={id:"modal",title:"Modal",description:"The Modal component is a simple way to present content above an enclosing view. To render the Modal above other components, you'll need to wrap it with the `Portal` component.",source:"@site/docs/modal.md",permalink:"/exoflex/docs/modal",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/modal.md",sidebar:"someSidebar",previous:{title:"Menu.Item",permalink:"/exoflex/docs/menuItem"},next:{title:"Portal",permalink:"/exoflex/docs/portal"}},c=[{value:"Usage",id:"usage",children:[]},{value:"Props",id:"props",children:[{value:"dismissable",id:"dismissable",children:[]},{value:"visible",id:"visible",children:[]},{value:"onDismiss",id:"ondismiss",children:[]},{value:"children (required)",id:"children-required",children:[]},{value:"contentContainerStyle",id:"contentcontainerstyle",children:[]}]}],s={rightToc:c};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"The Modal component is a simple way to present content above an enclosing view. To render the Modal above other components, you'll need to wrap it with the ",Object(i.b)("inlineCode",{parentName:"p"},"Portal")," component."),Object(i.b)("h2",{id:"usage"},"Usage"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-tsx",metastring:"live",live:!0}),"function Basic() {\n  let [visible, setVisible] = useState(false);\n\n  let toggleModal = () => setVisible(!visible);\n\n  return (\n    <Provider>\n      <View\n        style={{\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Button onPress={toggleModal}>Open Modal</Button>\n      </View>\n      <Portal>\n        <Modal\n          visible={visible}\n          onDismiss={toggleModal}\n          contentContainerStyle={{\n            backgroundColor: 'white',\n            textAlign: 'center',\n            alignSelf: 'center',\n            height: 150,\n            width: 400,\n          }}\n        >\n          <Text>Howdy, Modal!</Text>\n          <Text>You can click the overlay to close this modal.</Text>\n        </Modal>\n      </Portal>\n    </Provider>\n  );\n}\n")),Object(i.b)("h2",{id:"props"},"Props"),Object(i.b)("h3",{id:"dismissable"},"dismissable"),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"boolean"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},"true"),Object(i.b)("br",{parentName:"p"}),"\n","Whether clicking outside the Modal dismiss it."),Object(i.b)("h3",{id:"visible"},"visible"),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"boolean"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},"false"),Object(i.b)("br",{parentName:"p"}),"\n","Whether the Modal is currently visible."),Object(i.b)("h3",{id:"ondismiss"},"onDismiss"),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"() => void"),Object(i.b)("br",{parentName:"p"}),"\n","Callback called when Modal is dismissed. The visible prop needs to be updated when this is called."),Object(i.b)("h3",{id:"children-required"},"children (required)"),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"React.ReactNode"),Object(i.b)("br",{parentName:"p"}),"\n","Content of the Menu."),Object(i.b)("h3",{id:"contentcontainerstyle"},"contentContainerStyle"),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"StyleProp<ViewStyle>"),Object(i.b)("br",{parentName:"p"}),"\n","Style of modal's content."))}p.isMDXComponent=!0},250:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),p=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l({},t,{},e)),n},b=function(e){var t=p(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},u=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),b=p(n),u=r,m=b["".concat(a,".").concat(u)]||b[u]||d[u]||i;return n?o.a.createElement(m,l({ref:t},s,{components:n})):o.a.createElement(m,l({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);