diff --git a/node_modules/exoflex/lib/module/.DS_Store b/node_modules/exoflex/lib/module/.DS_Store
new file mode 100644
index 0000000..acac7b1
Binary files /dev/null and b/node_modules/exoflex/lib/module/.DS_Store differ
diff --git a/node_modules/exoflex/lib/module/components/.DS_Store b/node_modules/exoflex/lib/module/components/.DS_Store
new file mode 100644
index 0000000..816ce13
Binary files /dev/null and b/node_modules/exoflex/lib/module/components/.DS_Store differ
diff --git a/node_modules/exoflex/lib/module/components/DateTimePicker/DateTimePicker.js b/node_modules/exoflex/lib/module/components/DateTimePicker/DateTimePicker.js
index 6c9b660..9d24350 100644
--- a/node_modules/exoflex/lib/module/components/DateTimePicker/DateTimePicker.js
+++ b/node_modules/exoflex/lib/module/components/DateTimePicker/DateTimePicker.js
@@ -1,2 +1,2 @@
-import _extends from"@babel/runtime/helpers/extends";import _objectWithoutProperties from"@babel/runtime/helpers/objectWithoutProperties";var _jsxFileName="/Users/Me/projects/opensource/infra/packages/exoflex/src/components/DateTimePicker/DateTimePicker.tsx";import React from'react';import RNDateTimePicker from'react-native-modal-datetime-picker';import useTheme from'../../helpers/useTheme';import{StyleSheet}from'react-native';export default function DateTimePicker(props){var _themeStyle$dateTimeP,_themeStyle$dateTimeP2,_themeStyle$dateTimeP3,_themeStyle$dateTimeP4;var _onCancel=props.onCancel,_onConfirm=props.onConfirm,_props$date=props.date,date=_props$date===void 0?new Date().toISOString():_props$date,_props$mode=props.mode,mode=_props$mode===void 0?'datetime':_props$mode,_props$use24Hour=props.use24Hour,use24Hour=_props$use24Hour===void 0?false:_props$use24Hour,locale=props.locale,title=props.title,cancelButtonContainerStyleIOS=props.cancelButtonContainerStyleIOS,contentContainerStyleIOS=props.contentContainerStyleIOS,datePickerContainerStyleIOS=props.datePickerContainerStyleIOS,titleStyle=props.titleStyle,otherProps=_objectWithoutProperties(props,["onCancel","onConfirm","date","mode","use24Hour","locale","title","cancelButtonContainerStyleIOS","contentContainerStyleIOS","datePickerContainerStyleIOS","titleStyle"]);var _useTheme=useTheme(),themeStyle=_useTheme.style;return React.createElement(RNDateTimePicker,_extends({mode:mode,date:date.trim()===''?new Date():new Date(date),is24Hour:use24Hour,locale:locale||use24Hour?'en-GB':'en-US',onCancel:function onCancel(){return _onCancel();},onConfirm:function onConfirm(newDate){return _onConfirm(newDate.toISOString());},headerTextIOS:title,cancelButtonContainerStyleIOS:StyleSheet.flatten([themeStyle==null?void 0:(_themeStyle$dateTimeP=themeStyle.dateTimePicker)==null?void 0:_themeStyle$dateTimeP.cancelButtonContainerStyleIOS,cancelButtonContainerStyleIOS]),contentContainerStyleIOS:StyleSheet.flatten([themeStyle==null?void 0:(_themeStyle$dateTimeP2=themeStyle.dateTimePicker)==null?void 0:_themeStyle$dateTimeP2.contentContainerStyleIOS,contentContainerStyleIOS]),datePickerContainerStyleIOS:StyleSheet.flatten([themeStyle==null?void 0:(_themeStyle$dateTimeP3=themeStyle.dateTimePicker)==null?void 0:_themeStyle$dateTimeP3.datePickerContainerStyleIOS,datePickerContainerStyleIOS]),titleStyle:StyleSheet.flatten([themeStyle==null?void 0:(_themeStyle$dateTimeP4=themeStyle.dateTimePicker)==null?void 0:_themeStyle$dateTimeP4.titleStyle,titleStyle])},otherProps,{__source:{fileName:_jsxFileName,lineNumber:27}}));}
-//# sourceMappingURL=DateTimePicker.js.map
\ No newline at end of file
+import _defineProperty from"@babel/runtime/helpers/defineProperty";import _slicedToArray from"@babel/runtime/helpers/slicedToArray";var _jsxFileName="/Users/Me/projects/opensource/infra/packages/exoflex/src/components/DateTimePicker/DateTimePicker.web.tsx";import React,{useState,useCallback}from'react';import{StyleSheet,View}from'react-native';import{Modal,Portal,TouchableRipple}from'react-native-paper';import TimePicker from'../TimePicker/TimePicker.web';import Text from'../Text';import IconButton from'../IconButton';import useTheme from'../../helpers/useTheme';import{Calendar}from'../Calendar';import{Subtitle}from'../Typography';import{useDateTimePicker}from'./useDateTimePicker';export default function DateTimePicker(props){var _props$mode=props.mode,mode=_props$mode===void 0?'datetime':_props$mode,_props$date=props.date,date=_props$date===void 0?new Date().toISOString():_props$date,title=props.title,dateTitleWeb=props.dateTitleWeb,timeTitleWeb=props.timeTitleWeb,isVisible=props.isVisible,use24Hour=props.use24Hour,onCancel=props.onCancel,onConfirm=props.onConfirm,minimumDate=props.minimumDate,maximumDate=props.maximumDate;var _useTheme=useTheme(),colors=_useTheme.colors;var _useDateTimePicker=useDateTimePicker(mode,date,onConfirm),dateTime=_useDateTimePicker.dateTime,activePicker=_useDateTimePicker.activePicker,resetActivePicker=_useDateTimePicker.resetActivePicker,confirmDate=_useDateTimePicker.confirmDate,confirmTime=_useDateTimePicker.confirmTime;var cancel=function cancel(){resetActivePicker();onCancel();};var picker=activePicker==='date'?React.createElement(DatePicker,{title:dateTitleWeb||title,date:dateTime,minDate:minimumDate,maxDate:maximumDate,onCancel:cancel,onConfirm:confirmDate,__source:{fileName:_jsxFileName,lineNumber:48}}):React.createElement(TimePickerContainer,{title:timeTitleWeb||title,date:dateTime,use24Hour:use24Hour,onCancel:cancel,onConfirm:confirmTime,__source:{fileName:_jsxFileName,lineNumber:57}});if(!isVisible){return null;}return React.createElement(Portal,{__source:{fileName:_jsxFileName,lineNumber:70}},React.createElement(Modal,{visible:isVisible,onDismiss:cancel,contentContainerStyle:[styles.modalContainer,{backgroundColor:colors.background}],__source:{fileName:_jsxFileName,lineNumber:71}},picker));}export function DatePicker(props){var date=props.date,title=props.title,minDate=props.minDate,maxDate=props.maxDate,onCancel=props.onCancel,onConfirm=props.onConfirm;var _useTheme2=useTheme(),colors=_useTheme2.colors;var _useState=useState(date),_useState2=_slicedToArray(_useState,2),selectedDate=_useState2[0],setSelectedDate=_useState2[1];var changeDate=function changeDate(dateObject){setSelectedDate(new Date(dateObject.timestamp).toISOString());};var confirm=function confirm(){return onConfirm(selectedDate);};var arrow=useCallback(function(direction){return direction==='left'?React.createElement(IconButton,{icon:"chevron-left",__source:{fileName:_jsxFileName,lineNumber:109}}):React.createElement(IconButton,{icon:"chevron-right",__source:{fileName:_jsxFileName,lineNumber:111}});},[]);return React.createElement(React.Fragment,null,!!title&&React.createElement(View,{style:[styles.headerWrapper,{borderColor:colors.border}],__source:{fileName:_jsxFileName,lineNumber:119}},React.createElement(Subtitle,{__source:{fileName:_jsxFileName,lineNumber:120}},title)),React.createElement(Calendar,{current:selectedDate,markedDates:_defineProperty({},selectedDate.split('T')[0],{selected:true}),minDate:minDate,maxDate:maxDate,onDayPress:changeDate,renderArrow:arrow,__source:{fileName:_jsxFileName,lineNumber:123}}),React.createElement(View,{style:styles.touchableActionWrapper,__source:{fileName:_jsxFileName,lineNumber:131}},React.createElement(TouchableRipple,{onPress:onCancel,style:styles.touchableAction,__source:{fileName:_jsxFileName,lineNumber:132}},React.createElement(Text,{__source:{fileName:_jsxFileName,lineNumber:133}},"CANCEL")),React.createElement(TouchableRipple,{onPress:confirm,style:styles.touchableAction,__source:{fileName:_jsxFileName,lineNumber:135}},React.createElement(Text,{style:{color:colors.primary},__source:{fileName:_jsxFileName,lineNumber:136}},"CONFIRM"))));}export function TimePickerContainer(props){var date=props.date,title=props.title,use24Hour=props.use24Hour,onCancel=props.onCancel,onConfirm=props.onConfirm;var _useTheme3=useTheme(),colors=_useTheme3.colors;var _useState3=useState(date),_useState4=_slicedToArray(_useState3,2),selectedDateTime=_useState4[0],setSelectedDateTime=_useState4[1];var changeTime=function changeTime(dateTime){return setSelectedDateTime(dateTime);};var confirm=function confirm(){return onConfirm(selectedDateTime);};return React.createElement(React.Fragment,null,React.createElement(View,{style:{marginTop:title?6:12},__source:{fileName:_jsxFileName,lineNumber:154}},!!title&&React.createElement(View,{style:[styles.headerWrapper,styles.timeHeaderWrapper,{borderColor:colors.border}],__source:{fileName:_jsxFileName,lineNumber:157}},React.createElement(Subtitle,{__source:{fileName:_jsxFileName,lineNumber:164}},title)),React.createElement(View,{style:{alignItems:'center'},__source:{fileName:_jsxFileName,lineNumber:167}},React.createElement(TimePicker,{date:selectedDateTime,format:use24Hour?'24':'12',onChangeTime:changeTime,__source:{fileName:_jsxFileName,lineNumber:168}}))),React.createElement(View,{style:styles.touchableActionWrapper,__source:{fileName:_jsxFileName,lineNumber:175}},React.createElement(TouchableRipple,{onPress:onCancel,style:styles.touchableAction,__source:{fileName:_jsxFileName,lineNumber:176}},React.createElement(Text,{__source:{fileName:_jsxFileName,lineNumber:177}},"CANCEL")),React.createElement(TouchableRipple,{onPress:confirm,style:styles.touchableAction,__source:{fileName:_jsxFileName,lineNumber:179}},React.createElement(Text,{style:{color:colors.primary},__source:{fileName:_jsxFileName,lineNumber:180}},"CONFIRM"))));}var styles=StyleSheet.create({modalContainer:{margin:12,paddingVertical:12,width:360,alignSelf:'center'},headerWrapper:{alignItems:'center',borderBottomWidth:1,paddingBottom:11},timeHeaderWrapper:{paddingBottom:17,marginBottom:18},touchableAction:{padding:12,marginTop:16},touchableActionWrapper:{flexDirection:'row',justifyContent:'flex-end'}});
+//# sourceMappingURL=DateTimePicker.web.js.map
\ No newline at end of file
diff --git a/node_modules/exoflex/lib/module/components/DateTimePicker/DateTimePicker.js.map b/node_modules/exoflex/lib/module/components/DateTimePicker/DateTimePicker.js.map
index f40b4bb..4d4e06f 100644
--- a/node_modules/exoflex/lib/module/components/DateTimePicker/DateTimePicker.js.map
+++ b/node_modules/exoflex/lib/module/components/DateTimePicker/DateTimePicker.js.map
@@ -1 +1 @@
-{"version":3,"sources":["DateTimePicker.tsx"],"names":["React","RNDateTimePicker","useTheme","StyleSheet","DateTimePicker","props","onCancel","onConfirm","date","Date","toISOString","mode","use24Hour","locale","title","cancelButtonContainerStyleIOS","contentContainerStyleIOS","datePickerContainerStyleIOS","titleStyle","otherProps","themeStyle","style","trim","newDate","flatten","dateTimePicker"],"mappings":"mQAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oCAA7B,CAGA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,OAASC,UAAT,KAA2B,cAA3B,CAEA,cAAe,SAASC,CAAAA,cAAT,CAAwBC,KAAxB,CAAoD,mGAE/DC,CAAAA,SAF+D,CAc7DD,KAd6D,CAE/DC,QAF+D,CAG/DC,UAH+D,CAc7DF,KAd6D,CAG/DE,SAH+D,aAc7DF,KAd6D,CAI/DG,IAJ+D,CAI/DA,IAJ+D,sBAIxD,GAAIC,CAAAA,IAAJ,GAAWC,WAAX,EAJwD,yBAc7DL,KAd6D,CAK/DM,IAL+D,CAK/DA,IAL+D,sBAKxD,UALwD,8BAc7DN,KAd6D,CAM/DO,SAN+D,CAM/DA,SAN+D,2BAMnD,KANmD,kBAO/DC,MAP+D,CAc7DR,KAd6D,CAO/DQ,MAP+D,CAQ/DC,KAR+D,CAc7DT,KAd6D,CAQ/DS,KAR+D,CAS/DC,6BAT+D,CAc7DV,KAd6D,CAS/DU,6BAT+D,CAU/DC,wBAV+D,CAc7DX,KAd6D,CAU/DW,wBAV+D,CAW/DC,2BAX+D,CAc7DZ,KAd6D,CAW/DY,2BAX+D,CAY/DC,UAZ+D,CAc7Db,KAd6D,CAY/Da,UAZ+D,CAa5DC,UAb4D,0BAc7Dd,KAd6D,0LAgBnCH,QAAQ,EAhB2B,CAgBlDkB,UAhBkD,WAgBzDC,KAhByD,CAkBjE,MACE,qBAAC,gBAAD,WACE,IAAI,CAAEV,IADR,CAEE,IAAI,CAAEH,IAAI,CAACc,IAAL,KAAgB,EAAhB,CAAqB,GAAIb,CAAAA,IAAJ,EAArB,CAAkC,GAAIA,CAAAA,IAAJ,CAASD,IAAT,CAF1C,CAGE,QAAQ,CAAEI,SAHZ,CAKE,MAAM,CAAEC,MAAM,EAAID,SAAV,CAAsB,OAAtB,CAAgC,OAL1C,CAME,QAAQ,CAAE,0BAAMN,CAAAA,SAAQ,EAAd,EANZ,CAOE,SAAS,CAAE,mBAACiB,OAAD,QAAahB,CAAAA,UAAS,CAACgB,OAAO,CAACb,WAAR,EAAD,CAAtB,EAPb,CAQE,aAAa,CAAEI,KARjB,CASE,6BAA6B,CAAEX,UAAU,CAACqB,OAAX,CAAmB,CAChDJ,UADgD,qCAChDA,UAAU,CAAEK,cADoC,eAChD,sBAA4BV,6BADoB,CAEhDA,6BAFgD,CAAnB,CATjC,CAaE,wBAAwB,CAAEZ,UAAU,CAACqB,OAAX,CAAmB,CAC3CJ,UAD2C,sCAC3CA,UAAU,CAAEK,cAD+B,eAC3C,uBAA4BT,wBADe,CAE3CA,wBAF2C,CAAnB,CAb5B,CAiBE,2BAA2B,CAAEb,UAAU,CAACqB,OAAX,CAAmB,CAC9CJ,UAD8C,sCAC9CA,UAAU,CAAEK,cADkC,eAC9C,uBAA4BR,2BADkB,CAE9CA,2BAF8C,CAAnB,CAjB/B,CAqBE,UAAU,CAAEd,UAAU,CAACqB,OAAX,CAAmB,CAC7BJ,UAD6B,sCAC7BA,UAAU,CAAEK,cADiB,eAC7B,uBAA4BP,UADC,CAE7BA,UAF6B,CAAnB,CArBd,EAyBMC,UAzBN,mDADF,CA6BD","sourcesContent":["import React from 'react';\nimport RNDateTimePicker from 'react-native-modal-datetime-picker';\n\nimport { DateTimePickerProps, DateTimePickerMode } from './types';\nimport useTheme from '../../helpers/useTheme';\nimport { StyleSheet } from 'react-native';\n\nexport default function DateTimePicker(props: DateTimePickerProps) {\n  let {\n    onCancel,\n    onConfirm,\n    date = new Date().toISOString(),\n    mode = 'datetime' as DateTimePickerMode,\n    use24Hour = false,\n    locale,\n    title,\n    cancelButtonContainerStyleIOS,\n    contentContainerStyleIOS,\n    datePickerContainerStyleIOS,\n    titleStyle,\n    ...otherProps\n  } = props;\n\n  const { style: themeStyle } = useTheme();\n\n  return (\n    <RNDateTimePicker\n      mode={mode}\n      date={date.trim() === '' ? new Date() : new Date(date)}\n      is24Hour={use24Hour}\n      // NOTE: If locale is not provided, use `en-GB` for 12h format\n      locale={locale || use24Hour ? 'en-GB' : 'en-US'}\n      onCancel={() => onCancel()}\n      onConfirm={(newDate) => onConfirm(newDate.toISOString())}\n      headerTextIOS={title}\n      cancelButtonContainerStyleIOS={StyleSheet.flatten([\n        themeStyle?.dateTimePicker?.cancelButtonContainerStyleIOS,\n        cancelButtonContainerStyleIOS,\n      ])}\n      contentContainerStyleIOS={StyleSheet.flatten([\n        themeStyle?.dateTimePicker?.contentContainerStyleIOS,\n        contentContainerStyleIOS,\n      ])}\n      datePickerContainerStyleIOS={StyleSheet.flatten([\n        themeStyle?.dateTimePicker?.datePickerContainerStyleIOS,\n        datePickerContainerStyleIOS,\n      ])}\n      titleStyle={StyleSheet.flatten([\n        themeStyle?.dateTimePicker?.titleStyle,\n        titleStyle,\n      ])}\n      {...otherProps}\n    />\n  );\n}\n"]}
\ No newline at end of file
+{"version":3,"sources":["DateTimePicker.web.tsx"],"names":["React","useState","useCallback","StyleSheet","View","Modal","Portal","TouchableRipple","TimePicker","Text","IconButton","useTheme","Calendar","Subtitle","useDateTimePicker","DateTimePicker","props","mode","date","Date","toISOString","title","dateTitleWeb","timeTitleWeb","isVisible","use24Hour","onCancel","onConfirm","minimumDate","maximumDate","colors","dateTime","activePicker","resetActivePicker","confirmDate","confirmTime","cancel","picker","styles","modalContainer","backgroundColor","background","DatePicker","minDate","maxDate","selectedDate","setSelectedDate","changeDate","dateObject","timestamp","confirm","arrow","direction","headerWrapper","borderColor","border","split","selected","touchableActionWrapper","touchableAction","color","primary","TimePickerContainer","selectedDateTime","setSelectedDateTime","changeTime","marginTop","timeHeaderWrapper","alignItems","create","margin","paddingVertical","width","alignSelf","borderBottomWidth","paddingBottom","marginBottom","padding","flexDirection","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Modal, Portal, TouchableRipple } from 'react-native-paper';\nimport { DateObject } from 'react-native-calendars';\n\nimport TimePicker from '../TimePicker/TimePicker.web';\nimport Text from '../Text';\nimport IconButton from '../IconButton';\nimport useTheme from '../../helpers/useTheme';\n\nimport { Calendar } from '../Calendar';\nimport { Subtitle } from '../Typography';\nimport { useDateTimePicker } from './useDateTimePicker';\nimport { DateTimePickerProps, DateTimePickerMode } from './types';\n\nexport default function DateTimePicker(props: DateTimePickerProps) {\n  let {\n    mode = 'datetime' as DateTimePickerMode,\n    date = new Date().toISOString(),\n    title,\n    dateTitleWeb,\n    timeTitleWeb,\n    isVisible,\n    use24Hour,\n    onCancel,\n    onConfirm,\n    minimumDate,\n    maximumDate,\n  } = props;\n\n  let { colors } = useTheme();\n\n  let {\n    dateTime,\n    activePicker,\n    resetActivePicker,\n    confirmDate,\n    confirmTime,\n  } = useDateTimePicker(mode, date, onConfirm);\n\n  let cancel = () => {\n    resetActivePicker();\n    onCancel();\n  };\n\n  let picker =\n    activePicker === 'date' ? (\n      <DatePicker\n        title={dateTitleWeb || title}\n        date={dateTime}\n        minDate={minimumDate}\n        maxDate={maximumDate}\n        onCancel={cancel}\n        onConfirm={confirmDate}\n      />\n    ) : (\n      <TimePickerContainer\n        title={timeTitleWeb || title}\n        date={dateTime}\n        use24Hour={use24Hour}\n        onCancel={cancel}\n        onConfirm={confirmTime}\n      />\n    );\n\n  if (!isVisible) {\n    return null;\n  }\n  return (\n    <Portal>\n      <Modal\n        visible={isVisible}\n        onDismiss={cancel}\n        contentContainerStyle={[\n          styles.modalContainer,\n          { backgroundColor: colors.background },\n        ]}\n      >\n        {picker}\n      </Modal>\n    </Portal>\n  );\n}\n\nexport type PickerProps = Readonly<{\n  date: string;\n  title?: string;\n  minDate?: Date;\n  maxDate?: Date;\n  use24Hour?: boolean;\n  onCancel: () => void;\n  onConfirm: (date: string) => void;\n}>;\n\nexport function DatePicker(props: PickerProps) {\n  let { date, title, minDate, maxDate, onCancel, onConfirm } = props;\n  let { colors } = useTheme();\n\n  let [selectedDate, setSelectedDate] = useState(date);\n\n  let changeDate = (dateObject: DateObject) => {\n    setSelectedDate(new Date(dateObject.timestamp).toISOString());\n  };\n  let confirm = () => onConfirm(selectedDate);\n\n  let arrow = useCallback(\n    (direction: 'left' | 'right') =>\n      direction === 'left' ? (\n        <IconButton icon=\"chevron-left\" />\n      ) : (\n        <IconButton icon=\"chevron-right\" />\n      ),\n    [],\n  );\n\n  return (\n    <>\n      {!!title && (\n        <View style={[styles.headerWrapper, { borderColor: colors.border }]}>\n          <Subtitle>{title}</Subtitle>\n        </View>\n      )}\n      <Calendar\n        current={selectedDate}\n        markedDates={{ [selectedDate.split('T')[0]]: { selected: true } }}\n        minDate={minDate}\n        maxDate={maxDate}\n        onDayPress={changeDate}\n        renderArrow={arrow}\n      />\n      <View style={styles.touchableActionWrapper}>\n        <TouchableRipple onPress={onCancel} style={styles.touchableAction}>\n          <Text>CANCEL</Text>\n        </TouchableRipple>\n        <TouchableRipple onPress={confirm} style={styles.touchableAction}>\n          <Text style={{ color: colors.primary }}>CONFIRM</Text>\n        </TouchableRipple>\n      </View>\n    </>\n  );\n}\n\nexport function TimePickerContainer(props: PickerProps) {\n  let { date, title, use24Hour, onCancel, onConfirm } = props;\n  let { colors } = useTheme();\n\n  let [selectedDateTime, setSelectedDateTime] = useState(date);\n\n  let changeTime = (dateTime: string) => setSelectedDateTime(dateTime);\n  let confirm = () => onConfirm(selectedDateTime);\n\n  return (\n    <>\n      <View style={{ marginTop: title ? 6 : 12 }}>\n        {/* TODO: Handle format based on locale too */}\n        {!!title && (\n          <View\n            style={[\n              styles.headerWrapper,\n              styles.timeHeaderWrapper,\n              { borderColor: colors.border },\n            ]}\n          >\n            <Subtitle>{title}</Subtitle>\n          </View>\n        )}\n        <View style={{ alignItems: 'center' }}>\n          <TimePicker\n            date={selectedDateTime}\n            format={use24Hour ? '24' : '12'}\n            onChangeTime={changeTime}\n          />\n        </View>\n      </View>\n      <View style={styles.touchableActionWrapper}>\n        <TouchableRipple onPress={onCancel} style={styles.touchableAction}>\n          <Text>CANCEL</Text>\n        </TouchableRipple>\n        <TouchableRipple onPress={confirm} style={styles.touchableAction}>\n          <Text style={{ color: colors.primary }}>CONFIRM</Text>\n        </TouchableRipple>\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  modalContainer: {\n    margin: 12,\n    paddingVertical: 12,\n    width: 360,\n    alignSelf: 'center',\n  },\n  headerWrapper: {\n    alignItems: 'center',\n    borderBottomWidth: 1,\n    paddingBottom: 11,\n  },\n  timeHeaderWrapper: {\n    paddingBottom: 17, // NOTE: because of border\n    marginBottom: 18,\n  },\n  touchableAction: {\n    padding: 12,\n    marginTop: 16,\n  },\n  touchableActionWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n});\n"]}
\ No newline at end of file
diff --git a/node_modules/exoflex/lib/module/components/DateTimePicker/DateTimePicker.native.js b/node_modules/exoflex/lib/module/components/DateTimePicker/DateTimePicker.native.js
new file mode 100644
index 0000000..6c9b660
--- /dev/null
+++ b/node_modules/exoflex/lib/module/components/DateTimePicker/DateTimePicker.native.js
@@ -0,0 +1,2 @@
+import _extends from"@babel/runtime/helpers/extends";import _objectWithoutProperties from"@babel/runtime/helpers/objectWithoutProperties";var _jsxFileName="/Users/Me/projects/opensource/infra/packages/exoflex/src/components/DateTimePicker/DateTimePicker.tsx";import React from'react';import RNDateTimePicker from'react-native-modal-datetime-picker';import useTheme from'../../helpers/useTheme';import{StyleSheet}from'react-native';export default function DateTimePicker(props){var _themeStyle$dateTimeP,_themeStyle$dateTimeP2,_themeStyle$dateTimeP3,_themeStyle$dateTimeP4;var _onCancel=props.onCancel,_onConfirm=props.onConfirm,_props$date=props.date,date=_props$date===void 0?new Date().toISOString():_props$date,_props$mode=props.mode,mode=_props$mode===void 0?'datetime':_props$mode,_props$use24Hour=props.use24Hour,use24Hour=_props$use24Hour===void 0?false:_props$use24Hour,locale=props.locale,title=props.title,cancelButtonContainerStyleIOS=props.cancelButtonContainerStyleIOS,contentContainerStyleIOS=props.contentContainerStyleIOS,datePickerContainerStyleIOS=props.datePickerContainerStyleIOS,titleStyle=props.titleStyle,otherProps=_objectWithoutProperties(props,["onCancel","onConfirm","date","mode","use24Hour","locale","title","cancelButtonContainerStyleIOS","contentContainerStyleIOS","datePickerContainerStyleIOS","titleStyle"]);var _useTheme=useTheme(),themeStyle=_useTheme.style;return React.createElement(RNDateTimePicker,_extends({mode:mode,date:date.trim()===''?new Date():new Date(date),is24Hour:use24Hour,locale:locale||use24Hour?'en-GB':'en-US',onCancel:function onCancel(){return _onCancel();},onConfirm:function onConfirm(newDate){return _onConfirm(newDate.toISOString());},headerTextIOS:title,cancelButtonContainerStyleIOS:StyleSheet.flatten([themeStyle==null?void 0:(_themeStyle$dateTimeP=themeStyle.dateTimePicker)==null?void 0:_themeStyle$dateTimeP.cancelButtonContainerStyleIOS,cancelButtonContainerStyleIOS]),contentContainerStyleIOS:StyleSheet.flatten([themeStyle==null?void 0:(_themeStyle$dateTimeP2=themeStyle.dateTimePicker)==null?void 0:_themeStyle$dateTimeP2.contentContainerStyleIOS,contentContainerStyleIOS]),datePickerContainerStyleIOS:StyleSheet.flatten([themeStyle==null?void 0:(_themeStyle$dateTimeP3=themeStyle.dateTimePicker)==null?void 0:_themeStyle$dateTimeP3.datePickerContainerStyleIOS,datePickerContainerStyleIOS]),titleStyle:StyleSheet.flatten([themeStyle==null?void 0:(_themeStyle$dateTimeP4=themeStyle.dateTimePicker)==null?void 0:_themeStyle$dateTimeP4.titleStyle,titleStyle])},otherProps,{__source:{fileName:_jsxFileName,lineNumber:27}}));}
+//# sourceMappingURL=DateTimePicker.js.map
\ No newline at end of file
diff --git a/node_modules/exoflex/lib/module/components/DateTimePicker/DateTimePicker.native.js.map b/node_modules/exoflex/lib/module/components/DateTimePicker/DateTimePicker.native.js.map
new file mode 100644
index 0000000..f40b4bb
--- /dev/null
+++ b/node_modules/exoflex/lib/module/components/DateTimePicker/DateTimePicker.native.js.map
@@ -0,0 +1 @@
+{"version":3,"sources":["DateTimePicker.tsx"],"names":["React","RNDateTimePicker","useTheme","StyleSheet","DateTimePicker","props","onCancel","onConfirm","date","Date","toISOString","mode","use24Hour","locale","title","cancelButtonContainerStyleIOS","contentContainerStyleIOS","datePickerContainerStyleIOS","titleStyle","otherProps","themeStyle","style","trim","newDate","flatten","dateTimePicker"],"mappings":"mQAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oCAA7B,CAGA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,OAASC,UAAT,KAA2B,cAA3B,CAEA,cAAe,SAASC,CAAAA,cAAT,CAAwBC,KAAxB,CAAoD,mGAE/DC,CAAAA,SAF+D,CAc7DD,KAd6D,CAE/DC,QAF+D,CAG/DC,UAH+D,CAc7DF,KAd6D,CAG/DE,SAH+D,aAc7DF,KAd6D,CAI/DG,IAJ+D,CAI/DA,IAJ+D,sBAIxD,GAAIC,CAAAA,IAAJ,GAAWC,WAAX,EAJwD,yBAc7DL,KAd6D,CAK/DM,IAL+D,CAK/DA,IAL+D,sBAKxD,UALwD,8BAc7DN,KAd6D,CAM/DO,SAN+D,CAM/DA,SAN+D,2BAMnD,KANmD,kBAO/DC,MAP+D,CAc7DR,KAd6D,CAO/DQ,MAP+D,CAQ/DC,KAR+D,CAc7DT,KAd6D,CAQ/DS,KAR+D,CAS/DC,6BAT+D,CAc7DV,KAd6D,CAS/DU,6BAT+D,CAU/DC,wBAV+D,CAc7DX,KAd6D,CAU/DW,wBAV+D,CAW/DC,2BAX+D,CAc7DZ,KAd6D,CAW/DY,2BAX+D,CAY/DC,UAZ+D,CAc7Db,KAd6D,CAY/Da,UAZ+D,CAa5DC,UAb4D,0BAc7Dd,KAd6D,0LAgBnCH,QAAQ,EAhB2B,CAgBlDkB,UAhBkD,WAgBzDC,KAhByD,CAkBjE,MACE,qBAAC,gBAAD,WACE,IAAI,CAAEV,IADR,CAEE,IAAI,CAAEH,IAAI,CAACc,IAAL,KAAgB,EAAhB,CAAqB,GAAIb,CAAAA,IAAJ,EAArB,CAAkC,GAAIA,CAAAA,IAAJ,CAASD,IAAT,CAF1C,CAGE,QAAQ,CAAEI,SAHZ,CAKE,MAAM,CAAEC,MAAM,EAAID,SAAV,CAAsB,OAAtB,CAAgC,OAL1C,CAME,QAAQ,CAAE,0BAAMN,CAAAA,SAAQ,EAAd,EANZ,CAOE,SAAS,CAAE,mBAACiB,OAAD,QAAahB,CAAAA,UAAS,CAACgB,OAAO,CAACb,WAAR,EAAD,CAAtB,EAPb,CAQE,aAAa,CAAEI,KARjB,CASE,6BAA6B,CAAEX,UAAU,CAACqB,OAAX,CAAmB,CAChDJ,UADgD,qCAChDA,UAAU,CAAEK,cADoC,eAChD,sBAA4BV,6BADoB,CAEhDA,6BAFgD,CAAnB,CATjC,CAaE,wBAAwB,CAAEZ,UAAU,CAACqB,OAAX,CAAmB,CAC3CJ,UAD2C,sCAC3CA,UAAU,CAAEK,cAD+B,eAC3C,uBAA4BT,wBADe,CAE3CA,wBAF2C,CAAnB,CAb5B,CAiBE,2BAA2B,CAAEb,UAAU,CAACqB,OAAX,CAAmB,CAC9CJ,UAD8C,sCAC9CA,UAAU,CAAEK,cADkC,eAC9C,uBAA4BR,2BADkB,CAE9CA,2BAF8C,CAAnB,CAjB/B,CAqBE,UAAU,CAAEd,UAAU,CAACqB,OAAX,CAAmB,CAC7BJ,UAD6B,sCAC7BA,UAAU,CAAEK,cADiB,eAC7B,uBAA4BP,UADC,CAE7BA,UAF6B,CAAnB,CArBd,EAyBMC,UAzBN,mDADF,CA6BD","sourcesContent":["import React from 'react';\nimport RNDateTimePicker from 'react-native-modal-datetime-picker';\n\nimport { DateTimePickerProps, DateTimePickerMode } from './types';\nimport useTheme from '../../helpers/useTheme';\nimport { StyleSheet } from 'react-native';\n\nexport default function DateTimePicker(props: DateTimePickerProps) {\n  let {\n    onCancel,\n    onConfirm,\n    date = new Date().toISOString(),\n    mode = 'datetime' as DateTimePickerMode,\n    use24Hour = false,\n    locale,\n    title,\n    cancelButtonContainerStyleIOS,\n    contentContainerStyleIOS,\n    datePickerContainerStyleIOS,\n    titleStyle,\n    ...otherProps\n  } = props;\n\n  const { style: themeStyle } = useTheme();\n\n  return (\n    <RNDateTimePicker\n      mode={mode}\n      date={date.trim() === '' ? new Date() : new Date(date)}\n      is24Hour={use24Hour}\n      // NOTE: If locale is not provided, use `en-GB` for 12h format\n      locale={locale || use24Hour ? 'en-GB' : 'en-US'}\n      onCancel={() => onCancel()}\n      onConfirm={(newDate) => onConfirm(newDate.toISOString())}\n      headerTextIOS={title}\n      cancelButtonContainerStyleIOS={StyleSheet.flatten([\n        themeStyle?.dateTimePicker?.cancelButtonContainerStyleIOS,\n        cancelButtonContainerStyleIOS,\n      ])}\n      contentContainerStyleIOS={StyleSheet.flatten([\n        themeStyle?.dateTimePicker?.contentContainerStyleIOS,\n        contentContainerStyleIOS,\n      ])}\n      datePickerContainerStyleIOS={StyleSheet.flatten([\n        themeStyle?.dateTimePicker?.datePickerContainerStyleIOS,\n        datePickerContainerStyleIOS,\n      ])}\n      titleStyle={StyleSheet.flatten([\n        themeStyle?.dateTimePicker?.titleStyle,\n        titleStyle,\n      ])}\n      {...otherProps}\n    />\n  );\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/exoflex/lib/module/components/DateTimePicker/DateTimePicker.web.js b/node_modules/exoflex/lib/module/components/DateTimePicker/DateTimePicker.web.js
deleted file mode 100644
index 9d24350..0000000
--- a/node_modules/exoflex/lib/module/components/DateTimePicker/DateTimePicker.web.js
+++ /dev/null
@@ -1,2 +0,0 @@
-import _defineProperty from"@babel/runtime/helpers/defineProperty";import _slicedToArray from"@babel/runtime/helpers/slicedToArray";var _jsxFileName="/Users/Me/projects/opensource/infra/packages/exoflex/src/components/DateTimePicker/DateTimePicker.web.tsx";import React,{useState,useCallback}from'react';import{StyleSheet,View}from'react-native';import{Modal,Portal,TouchableRipple}from'react-native-paper';import TimePicker from'../TimePicker/TimePicker.web';import Text from'../Text';import IconButton from'../IconButton';import useTheme from'../../helpers/useTheme';import{Calendar}from'../Calendar';import{Subtitle}from'../Typography';import{useDateTimePicker}from'./useDateTimePicker';export default function DateTimePicker(props){var _props$mode=props.mode,mode=_props$mode===void 0?'datetime':_props$mode,_props$date=props.date,date=_props$date===void 0?new Date().toISOString():_props$date,title=props.title,dateTitleWeb=props.dateTitleWeb,timeTitleWeb=props.timeTitleWeb,isVisible=props.isVisible,use24Hour=props.use24Hour,onCancel=props.onCancel,onConfirm=props.onConfirm,minimumDate=props.minimumDate,maximumDate=props.maximumDate;var _useTheme=useTheme(),colors=_useTheme.colors;var _useDateTimePicker=useDateTimePicker(mode,date,onConfirm),dateTime=_useDateTimePicker.dateTime,activePicker=_useDateTimePicker.activePicker,resetActivePicker=_useDateTimePicker.resetActivePicker,confirmDate=_useDateTimePicker.confirmDate,confirmTime=_useDateTimePicker.confirmTime;var cancel=function cancel(){resetActivePicker();onCancel();};var picker=activePicker==='date'?React.createElement(DatePicker,{title:dateTitleWeb||title,date:dateTime,minDate:minimumDate,maxDate:maximumDate,onCancel:cancel,onConfirm:confirmDate,__source:{fileName:_jsxFileName,lineNumber:48}}):React.createElement(TimePickerContainer,{title:timeTitleWeb||title,date:dateTime,use24Hour:use24Hour,onCancel:cancel,onConfirm:confirmTime,__source:{fileName:_jsxFileName,lineNumber:57}});if(!isVisible){return null;}return React.createElement(Portal,{__source:{fileName:_jsxFileName,lineNumber:70}},React.createElement(Modal,{visible:isVisible,onDismiss:cancel,contentContainerStyle:[styles.modalContainer,{backgroundColor:colors.background}],__source:{fileName:_jsxFileName,lineNumber:71}},picker));}export function DatePicker(props){var date=props.date,title=props.title,minDate=props.minDate,maxDate=props.maxDate,onCancel=props.onCancel,onConfirm=props.onConfirm;var _useTheme2=useTheme(),colors=_useTheme2.colors;var _useState=useState(date),_useState2=_slicedToArray(_useState,2),selectedDate=_useState2[0],setSelectedDate=_useState2[1];var changeDate=function changeDate(dateObject){setSelectedDate(new Date(dateObject.timestamp).toISOString());};var confirm=function confirm(){return onConfirm(selectedDate);};var arrow=useCallback(function(direction){return direction==='left'?React.createElement(IconButton,{icon:"chevron-left",__source:{fileName:_jsxFileName,lineNumber:109}}):React.createElement(IconButton,{icon:"chevron-right",__source:{fileName:_jsxFileName,lineNumber:111}});},[]);return React.createElement(React.Fragment,null,!!title&&React.createElement(View,{style:[styles.headerWrapper,{borderColor:colors.border}],__source:{fileName:_jsxFileName,lineNumber:119}},React.createElement(Subtitle,{__source:{fileName:_jsxFileName,lineNumber:120}},title)),React.createElement(Calendar,{current:selectedDate,markedDates:_defineProperty({},selectedDate.split('T')[0],{selected:true}),minDate:minDate,maxDate:maxDate,onDayPress:changeDate,renderArrow:arrow,__source:{fileName:_jsxFileName,lineNumber:123}}),React.createElement(View,{style:styles.touchableActionWrapper,__source:{fileName:_jsxFileName,lineNumber:131}},React.createElement(TouchableRipple,{onPress:onCancel,style:styles.touchableAction,__source:{fileName:_jsxFileName,lineNumber:132}},React.createElement(Text,{__source:{fileName:_jsxFileName,lineNumber:133}},"CANCEL")),React.createElement(TouchableRipple,{onPress:confirm,style:styles.touchableAction,__source:{fileName:_jsxFileName,lineNumber:135}},React.createElement(Text,{style:{color:colors.primary},__source:{fileName:_jsxFileName,lineNumber:136}},"CONFIRM"))));}export function TimePickerContainer(props){var date=props.date,title=props.title,use24Hour=props.use24Hour,onCancel=props.onCancel,onConfirm=props.onConfirm;var _useTheme3=useTheme(),colors=_useTheme3.colors;var _useState3=useState(date),_useState4=_slicedToArray(_useState3,2),selectedDateTime=_useState4[0],setSelectedDateTime=_useState4[1];var changeTime=function changeTime(dateTime){return setSelectedDateTime(dateTime);};var confirm=function confirm(){return onConfirm(selectedDateTime);};return React.createElement(React.Fragment,null,React.createElement(View,{style:{marginTop:title?6:12},__source:{fileName:_jsxFileName,lineNumber:154}},!!title&&React.createElement(View,{style:[styles.headerWrapper,styles.timeHeaderWrapper,{borderColor:colors.border}],__source:{fileName:_jsxFileName,lineNumber:157}},React.createElement(Subtitle,{__source:{fileName:_jsxFileName,lineNumber:164}},title)),React.createElement(View,{style:{alignItems:'center'},__source:{fileName:_jsxFileName,lineNumber:167}},React.createElement(TimePicker,{date:selectedDateTime,format:use24Hour?'24':'12',onChangeTime:changeTime,__source:{fileName:_jsxFileName,lineNumber:168}}))),React.createElement(View,{style:styles.touchableActionWrapper,__source:{fileName:_jsxFileName,lineNumber:175}},React.createElement(TouchableRipple,{onPress:onCancel,style:styles.touchableAction,__source:{fileName:_jsxFileName,lineNumber:176}},React.createElement(Text,{__source:{fileName:_jsxFileName,lineNumber:177}},"CANCEL")),React.createElement(TouchableRipple,{onPress:confirm,style:styles.touchableAction,__source:{fileName:_jsxFileName,lineNumber:179}},React.createElement(Text,{style:{color:colors.primary},__source:{fileName:_jsxFileName,lineNumber:180}},"CONFIRM"))));}var styles=StyleSheet.create({modalContainer:{margin:12,paddingVertical:12,width:360,alignSelf:'center'},headerWrapper:{alignItems:'center',borderBottomWidth:1,paddingBottom:11},timeHeaderWrapper:{paddingBottom:17,marginBottom:18},touchableAction:{padding:12,marginTop:16},touchableActionWrapper:{flexDirection:'row',justifyContent:'flex-end'}});
-//# sourceMappingURL=DateTimePicker.web.js.map
\ No newline at end of file
diff --git a/node_modules/exoflex/lib/module/components/DateTimePicker/DateTimePicker.web.js.map b/node_modules/exoflex/lib/module/components/DateTimePicker/DateTimePicker.web.js.map
deleted file mode 100644
index 4d4e06f..0000000
--- a/node_modules/exoflex/lib/module/components/DateTimePicker/DateTimePicker.web.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"sources":["DateTimePicker.web.tsx"],"names":["React","useState","useCallback","StyleSheet","View","Modal","Portal","TouchableRipple","TimePicker","Text","IconButton","useTheme","Calendar","Subtitle","useDateTimePicker","DateTimePicker","props","mode","date","Date","toISOString","title","dateTitleWeb","timeTitleWeb","isVisible","use24Hour","onCancel","onConfirm","minimumDate","maximumDate","colors","dateTime","activePicker","resetActivePicker","confirmDate","confirmTime","cancel","picker","styles","modalContainer","backgroundColor","background","DatePicker","minDate","maxDate","selectedDate","setSelectedDate","changeDate","dateObject","timestamp","confirm","arrow","direction","headerWrapper","borderColor","border","split","selected","touchableActionWrapper","touchableAction","color","primary","TimePickerContainer","selectedDateTime","setSelectedDateTime","changeTime","marginTop","timeHeaderWrapper","alignItems","create","margin","paddingVertical","width","alignSelf","borderBottomWidth","paddingBottom","marginBottom","padding","flexDirection","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Modal, Portal, TouchableRipple } from 'react-native-paper';\nimport { DateObject } from 'react-native-calendars';\n\nimport TimePicker from '../TimePicker/TimePicker.web';\nimport Text from '../Text';\nimport IconButton from '../IconButton';\nimport useTheme from '../../helpers/useTheme';\n\nimport { Calendar } from '../Calendar';\nimport { Subtitle } from '../Typography';\nimport { useDateTimePicker } from './useDateTimePicker';\nimport { DateTimePickerProps, DateTimePickerMode } from './types';\n\nexport default function DateTimePicker(props: DateTimePickerProps) {\n  let {\n    mode = 'datetime' as DateTimePickerMode,\n    date = new Date().toISOString(),\n    title,\n    dateTitleWeb,\n    timeTitleWeb,\n    isVisible,\n    use24Hour,\n    onCancel,\n    onConfirm,\n    minimumDate,\n    maximumDate,\n  } = props;\n\n  let { colors } = useTheme();\n\n  let {\n    dateTime,\n    activePicker,\n    resetActivePicker,\n    confirmDate,\n    confirmTime,\n  } = useDateTimePicker(mode, date, onConfirm);\n\n  let cancel = () => {\n    resetActivePicker();\n    onCancel();\n  };\n\n  let picker =\n    activePicker === 'date' ? (\n      <DatePicker\n        title={dateTitleWeb || title}\n        date={dateTime}\n        minDate={minimumDate}\n        maxDate={maximumDate}\n        onCancel={cancel}\n        onConfirm={confirmDate}\n      />\n    ) : (\n      <TimePickerContainer\n        title={timeTitleWeb || title}\n        date={dateTime}\n        use24Hour={use24Hour}\n        onCancel={cancel}\n        onConfirm={confirmTime}\n      />\n    );\n\n  if (!isVisible) {\n    return null;\n  }\n  return (\n    <Portal>\n      <Modal\n        visible={isVisible}\n        onDismiss={cancel}\n        contentContainerStyle={[\n          styles.modalContainer,\n          { backgroundColor: colors.background },\n        ]}\n      >\n        {picker}\n      </Modal>\n    </Portal>\n  );\n}\n\nexport type PickerProps = Readonly<{\n  date: string;\n  title?: string;\n  minDate?: Date;\n  maxDate?: Date;\n  use24Hour?: boolean;\n  onCancel: () => void;\n  onConfirm: (date: string) => void;\n}>;\n\nexport function DatePicker(props: PickerProps) {\n  let { date, title, minDate, maxDate, onCancel, onConfirm } = props;\n  let { colors } = useTheme();\n\n  let [selectedDate, setSelectedDate] = useState(date);\n\n  let changeDate = (dateObject: DateObject) => {\n    setSelectedDate(new Date(dateObject.timestamp).toISOString());\n  };\n  let confirm = () => onConfirm(selectedDate);\n\n  let arrow = useCallback(\n    (direction: 'left' | 'right') =>\n      direction === 'left' ? (\n        <IconButton icon=\"chevron-left\" />\n      ) : (\n        <IconButton icon=\"chevron-right\" />\n      ),\n    [],\n  );\n\n  return (\n    <>\n      {!!title && (\n        <View style={[styles.headerWrapper, { borderColor: colors.border }]}>\n          <Subtitle>{title}</Subtitle>\n        </View>\n      )}\n      <Calendar\n        current={selectedDate}\n        markedDates={{ [selectedDate.split('T')[0]]: { selected: true } }}\n        minDate={minDate}\n        maxDate={maxDate}\n        onDayPress={changeDate}\n        renderArrow={arrow}\n      />\n      <View style={styles.touchableActionWrapper}>\n        <TouchableRipple onPress={onCancel} style={styles.touchableAction}>\n          <Text>CANCEL</Text>\n        </TouchableRipple>\n        <TouchableRipple onPress={confirm} style={styles.touchableAction}>\n          <Text style={{ color: colors.primary }}>CONFIRM</Text>\n        </TouchableRipple>\n      </View>\n    </>\n  );\n}\n\nexport function TimePickerContainer(props: PickerProps) {\n  let { date, title, use24Hour, onCancel, onConfirm } = props;\n  let { colors } = useTheme();\n\n  let [selectedDateTime, setSelectedDateTime] = useState(date);\n\n  let changeTime = (dateTime: string) => setSelectedDateTime(dateTime);\n  let confirm = () => onConfirm(selectedDateTime);\n\n  return (\n    <>\n      <View style={{ marginTop: title ? 6 : 12 }}>\n        {/* TODO: Handle format based on locale too */}\n        {!!title && (\n          <View\n            style={[\n              styles.headerWrapper,\n              styles.timeHeaderWrapper,\n              { borderColor: colors.border },\n            ]}\n          >\n            <Subtitle>{title}</Subtitle>\n          </View>\n        )}\n        <View style={{ alignItems: 'center' }}>\n          <TimePicker\n            date={selectedDateTime}\n            format={use24Hour ? '24' : '12'}\n            onChangeTime={changeTime}\n          />\n        </View>\n      </View>\n      <View style={styles.touchableActionWrapper}>\n        <TouchableRipple onPress={onCancel} style={styles.touchableAction}>\n          <Text>CANCEL</Text>\n        </TouchableRipple>\n        <TouchableRipple onPress={confirm} style={styles.touchableAction}>\n          <Text style={{ color: colors.primary }}>CONFIRM</Text>\n        </TouchableRipple>\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  modalContainer: {\n    margin: 12,\n    paddingVertical: 12,\n    width: 360,\n    alignSelf: 'center',\n  },\n  headerWrapper: {\n    alignItems: 'center',\n    borderBottomWidth: 1,\n    paddingBottom: 11,\n  },\n  timeHeaderWrapper: {\n    paddingBottom: 17, // NOTE: because of border\n    marginBottom: 18,\n  },\n  touchableAction: {\n    padding: 12,\n    marginTop: 16,\n  },\n  touchableActionWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n});\n"]}
\ No newline at end of file
diff --git a/node_modules/exoflex/lib/module/components/TimePicker/TimePicker.js b/node_modules/exoflex/lib/module/components/TimePicker/TimePicker.js
index 2a595a4..255b960 100644
--- a/node_modules/exoflex/lib/module/components/TimePicker/TimePicker.js
+++ b/node_modules/exoflex/lib/module/components/TimePicker/TimePicker.js
@@ -1,2 +1,2 @@
-import _slicedToArray from"@babel/runtime/helpers/slicedToArray";var _jsxFileName="/Users/Me/projects/opensource/infra/packages/exoflex/src/components/TimePicker/TimePicker.tsx";import React,{useState,useMemo}from'react';import{TouchableOpacity}from'react-native';import DateTimePicker from'react-native-modal-datetime-picker';import TextInput from'../TextInput/TextInput';import useTheme from'../../helpers/useTheme';import{createTimeForDisplay}from'../../helpers/displayTime';export default function TimePicker(props){var _themeStyle$timePicke;var _props$format=props.format,format=_props$format===void 0?'12':_props$format,date=props.date,_props$placeholder=props.placeholder,placeholder=_props$placeholder===void 0?'':_props$placeholder,_props$title=props.title,title=_props$title===void 0?'':_props$title,locale=props.locale,onChangeTime=props.onChangeTime,style=props.style;var _useTheme=useTheme(),colors=_useTheme.colors,themeStyle=_useTheme.style;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),visible=_useState2[0],setVisible=_useState2[1];var use24Hour=format==='24';var toggleModal=function toggleModal(){return setVisible(!visible);};var changeDate=function changeDate(d){var newDate=d.toISOString();toggleModal();onChangeTime&&onChangeTime(newDate);};var displayTime=useMemo(function(){return createTimeForDisplay(date,format);},[date,format]);return React.createElement(React.Fragment,null,React.createElement(TouchableOpacity,{activeOpacity:0.7,onPress:toggleModal,__source:{fileName:_jsxFileName,lineNumber:40}},React.createElement(TextInput,{disabled:true,mode:"outlined",label:"Time",value:displayTime,placeholder:placeholder,pointerEvents:"none",containerStyle:{borderColor:colors.border,backgroundColor:colors.surface},style:[{backgroundColor:colors.surface},themeStyle==null?void 0:(_themeStyle$timePicke=themeStyle.timePicker)==null?void 0:_themeStyle$timePicke.style,style],__source:{fileName:_jsxFileName,lineNumber:41}})),React.createElement(DateTimePicker,{date:new Date(date),headerTextIOS:title,is24Hour:use24Hour,locale:locale||use24Hour?'en-GB':'en-US',isVisible:visible,mode:"time",onConfirm:changeDate,onCancel:toggleModal,__source:{fileName:_jsxFileName,lineNumber:59}}));}
-//# sourceMappingURL=TimePicker.js.map
\ No newline at end of file
+import _slicedToArray from"@babel/runtime/helpers/slicedToArray";var _jsxFileName="/Users/Me/projects/opensource/infra/packages/exoflex/src/components/TimePicker/TimePicker.web.tsx";import React,{useState,useEffect}from'react';import{View}from'react-native';import TimePickerInput from'./TimePickerInput';import{isHoursFormatValid,isMinutesFormatValid,isSecondsFormatValid}from'../../helpers/timeChecker';import{convertTimeToDate,convertDateToLocalTime}from'../../helpers/resolveTime';export default function TimePicker(props){var _props$format=props.format,format=_props$format===void 0?'12':_props$format,date=props.date,onChangeTime=props.onChangeTime;var _convertDateToLocalTi=convertDateToLocalTime(date,format),_convertDateToLocalTi2=_slicedToArray(_convertDateToLocalTi,4),h=_convertDateToLocalTi2[0],m=_convertDateToLocalTi2[1],s=_convertDateToLocalTi2[2],mer=_convertDateToLocalTi2[3];var isDateEmpty=date==='';var _useState=useState(isDateEmpty?'12':h),_useState2=_slicedToArray(_useState,2),hour=_useState2[0],setHour=_useState2[1];var _useState3=useState(isDateEmpty?'00':m),_useState4=_slicedToArray(_useState3,2),minute=_useState4[0],setMinute=_useState4[1];var _useState5=useState(isDateEmpty?'00':s),_useState6=_slicedToArray(_useState5,2),second=_useState6[0],setSecond=_useState6[1];var _useState7=useState(isDateEmpty?'AM':mer),_useState8=_slicedToArray(_useState7,2),meridiem=_useState8[0],setMeridiem=_useState8[1];useEffect(function(){var utcString=convertTimeToDate(date,hour,minute,second,meridiem);onChangeTime&&onChangeTime(utcString);},[hour,minute,second,meridiem]);var changeHour=function changeHour(newHour){return setHour(newHour);};var changeMinute=function changeMinute(newMinute){return setMinute(newMinute);};var changeSecond=function changeSecond(newSecond){return setSecond(newSecond);};var changeMeridiem=function changeMeridiem(newMeridiem){return setMeridiem(newMeridiem);};var checkHour=function checkHour(){!isHoursFormatValid(hour,format)&&setHour('12');};var checkMinute=function checkMinute(){!isMinutesFormatValid(minute)&&setMinute('00');};var checkSecond=function checkSecond(){!isSecondsFormatValid(second)&&setSecond('00');};var checkMeridiem=function checkMeridiem(){!(meridiem==='AM'||meridiem==='PM')&&setMeridiem('AM');};return React.createElement(View,{style:{flexDirection:'row'},__source:{fileName:_jsxFileName,lineNumber:56}},React.createElement(TimePickerInput,{format:format,value:hour,placeholder:"hh",onChangeText:changeHour,onBlur:checkHour,__source:{fileName:_jsxFileName,lineNumber:57}}),React.createElement(TimePickerInput,{format:format,value:minute,placeholder:"mm",onChangeText:changeMinute,onBlur:checkMinute,__source:{fileName:_jsxFileName,lineNumber:64}}),React.createElement(TimePickerInput,{format:format,value:second,placeholder:"ss",onChangeText:changeSecond,onBlur:checkSecond,__source:{fileName:_jsxFileName,lineNumber:71}}),format==='12'&&React.createElement(TimePickerInput,{placeholder:"am/pm",format:format,value:meridiem,onChangeText:changeMeridiem,onBlur:checkMeridiem,__source:{fileName:_jsxFileName,lineNumber:79}}));}
+//# sourceMappingURL=TimePicker.web.js.map
\ No newline at end of file
diff --git a/node_modules/exoflex/lib/module/components/TimePicker/TimePicker.js.map b/node_modules/exoflex/lib/module/components/TimePicker/TimePicker.js.map
index 456c50b..4320260 100644
--- a/node_modules/exoflex/lib/module/components/TimePicker/TimePicker.js.map
+++ b/node_modules/exoflex/lib/module/components/TimePicker/TimePicker.js.map
@@ -1 +1 @@
-{"version":3,"sources":["TimePicker.tsx"],"names":["React","useState","useMemo","TouchableOpacity","DateTimePicker","TextInput","useTheme","createTimeForDisplay","TimePicker","props","format","date","placeholder","title","locale","onChangeTime","style","colors","themeStyle","visible","setVisible","use24Hour","toggleModal","changeDate","d","newDate","toISOString","displayTime","borderColor","border","backgroundColor","surface","timePicker","Date"],"mappings":"kLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,OAA1B,KAAyC,OAAzC,CACA,OAASC,gBAAT,KAAiC,cAAjC,CACA,MAAOC,CAAAA,cAAP,KAA2B,oCAA3B,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CAGA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,OAASC,oBAAT,KAAqC,2BAArC,CAGA,cAAe,SAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA4C,6CASrDA,KATqD,CAEvDC,MAFuD,CAEvDA,MAFuD,wBAE9C,IAF8C,eAGvDC,IAHuD,CASrDF,KATqD,CAGvDE,IAHuD,oBASrDF,KATqD,CAIvDG,WAJuD,CAIvDA,WAJuD,6BAIzC,EAJyC,iCASrDH,KATqD,CAKvDI,KALuD,CAKvDA,KALuD,uBAK/C,EAL+C,cAMvDC,MANuD,CASrDL,KATqD,CAMvDK,MANuD,CAOvDC,YAPuD,CASrDN,KATqD,CAOvDM,YAPuD,CAQvDC,KARuD,CASrDP,KATqD,CAQvDO,KARuD,eAUrBV,QAAQ,EAVa,CAUnDW,MAVmD,WAUnDA,MAVmD,CAUpCC,UAVoC,WAU3CF,KAV2C,eAY7Bf,QAAQ,CAAC,KAAD,CAZqB,wCAYpDkB,OAZoD,eAY3CC,UAZ2C,eAczD,GAAIC,CAAAA,SAAS,CAAGX,MAAM,GAAK,IAA3B,CAEA,GAAIY,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAMF,CAAAA,UAAU,CAAC,CAACD,OAAF,CAAhB,EAAlB,CACA,GAAII,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,CAAD,CAAa,CAC5B,GAAIC,CAAAA,OAAO,CAAGD,CAAC,CAACE,WAAF,EAAd,CACAJ,WAAW,GACXP,YAAY,EAAIA,YAAY,CAACU,OAAD,CAA5B,CACD,CAJD,CAKA,GAAIE,CAAAA,WAAW,CAAGzB,OAAO,CAAC,iBAAMK,CAAAA,oBAAoB,CAACI,IAAD,CAAOD,MAAP,CAA1B,EAAD,CAA2C,CAClEC,IADkE,CAElED,MAFkE,CAA3C,CAAzB,CAKA,MACE,yCACE,oBAAC,gBAAD,EAAkB,aAAa,CAAE,GAAjC,CAAsC,OAAO,CAAEY,WAA/C,iDACE,oBAAC,SAAD,EACE,QAAQ,KADV,CAEE,IAAI,CAAC,UAFP,CAGE,KAAK,CAAC,MAHR,CAIE,KAAK,CAAEK,WAJT,CAKE,WAAW,CAAEf,WALf,CAME,aAAa,CAAC,MANhB,CAOE,cAAc,CAAE,CACdgB,WAAW,CAAEX,MAAM,CAACY,MADN,CAEdC,eAAe,CAAEb,MAAM,CAACc,OAFV,CAPlB,CAWE,KAAK,CAAE,CACL,CAAED,eAAe,CAAEb,MAAM,CAACc,OAA1B,CADK,CAELb,UAFK,qCAELA,UAAU,CAAEc,UAFP,eAEL,sBAAwBhB,KAFnB,CAGLA,KAHK,CAXT,iDADF,CADF,CAoBE,oBAAC,cAAD,EACE,IAAI,CAAE,GAAIiB,CAAAA,IAAJ,CAAStB,IAAT,CADR,CAEE,aAAa,CAAEE,KAFjB,CAIE,QAAQ,CAAEQ,SAJZ,CAME,MAAM,CAAEP,MAAM,EAAIO,SAAV,CAAsB,OAAtB,CAAgC,OAN1C,CAOE,SAAS,CAAEF,OAPb,CAQE,IAAI,CAAC,MARP,CASE,SAAS,CAAEI,UATb,CAUE,QAAQ,CAAED,WAVZ,iDApBF,CADF,CAmCD","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport DateTimePicker from 'react-native-modal-datetime-picker';\nimport TextInput from '../TextInput/TextInput';\n\nimport { HourFormat } from '../../helpers/timeChecker';\nimport useTheme from '../../helpers/useTheme';\nimport { createTimeForDisplay } from '../../helpers/displayTime';\nimport { TimePickerProps } from './types';\n\nexport default function TimePicker(props: TimePickerProps) {\n  let {\n    format = '12' as HourFormat,\n    date,\n    placeholder = '',\n    title = '',\n    locale,\n    onChangeTime,\n    style,\n  } = props;\n  let { colors, style: themeStyle } = useTheme();\n\n  let [visible, setVisible] = useState(false);\n\n  let use24Hour = format === '24';\n\n  let toggleModal = () => setVisible(!visible);\n  let changeDate = (d: Date) => {\n    let newDate = d.toISOString();\n    toggleModal();\n    onChangeTime && onChangeTime(newDate);\n  };\n  let displayTime = useMemo(() => createTimeForDisplay(date, format), [\n    date,\n    format,\n  ]);\n\n  return (\n    <>\n      <TouchableOpacity activeOpacity={0.7} onPress={toggleModal}>\n        <TextInput\n          disabled\n          mode=\"outlined\"\n          label=\"Time\"\n          value={displayTime}\n          placeholder={placeholder}\n          pointerEvents=\"none\"\n          containerStyle={{\n            borderColor: colors.border,\n            backgroundColor: colors.surface,\n          }}\n          style={[\n            { backgroundColor: colors.surface },\n            themeStyle?.timePicker?.style,\n            style,\n          ]}\n        />\n      </TouchableOpacity>\n      <DateTimePicker\n        date={new Date(date)}\n        headerTextIOS={title}\n        // NOTE: Android only\n        is24Hour={use24Hour}\n        // NOTE: If locale is not provided, use `en-GB` for 12h format\n        locale={locale || use24Hour ? 'en-GB' : 'en-US'}\n        isVisible={visible}\n        mode=\"time\"\n        onConfirm={changeDate}\n        onCancel={toggleModal}\n      />\n    </>\n  );\n}\n"]}
\ No newline at end of file
+{"version":3,"sources":["TimePicker.web.tsx"],"names":["React","useState","useEffect","View","TimePickerInput","isHoursFormatValid","isMinutesFormatValid","isSecondsFormatValid","convertTimeToDate","convertDateToLocalTime","TimePicker","props","format","date","onChangeTime","h","m","s","mer","isDateEmpty","hour","setHour","minute","setMinute","second","setSecond","meridiem","setMeridiem","utcString","changeHour","newHour","changeMinute","newMinute","changeSecond","newSecond","changeMeridiem","newMeridiem","checkHour","checkMinute","checkSecond","checkMeridiem","flexDirection"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View } from 'react-native';\nimport TimePickerInput from './TimePickerInput';\n\nimport {\n  isHoursFormatValid,\n  isMinutesFormatValid,\n  isSecondsFormatValid,\n  HourFormat,\n  Meridiem,\n} from '../../helpers/timeChecker';\nimport {\n  convertTimeToDate,\n  convertDateToLocalTime,\n} from '../../helpers/resolveTime';\nimport { TimePickerProps } from './types';\n\nexport default function TimePicker(props: TimePickerProps) {\n  let { format = '12' as HourFormat, date, onChangeTime } = props;\n  let [h, m, s, mer] = convertDateToLocalTime(date, format);\n  let isDateEmpty = date === '';\n\n  let [hour, setHour] = useState(isDateEmpty ? '12' : h);\n  let [minute, setMinute] = useState(isDateEmpty ? '00' : m);\n  let [second, setSecond] = useState(isDateEmpty ? '00' : s);\n  let [meridiem, setMeridiem] = useState<Meridiem>(\n    isDateEmpty ? 'AM' : (mer as Meridiem),\n  );\n\n  useEffect(() => {\n    let utcString = convertTimeToDate(date, hour, minute, second, meridiem);\n    onChangeTime && onChangeTime(utcString);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hour, minute, second, meridiem]);\n\n  let changeHour = (newHour: string) => setHour(newHour);\n  let changeMinute = (newMinute: string) => setMinute(newMinute);\n  let changeSecond = (newSecond: string) => setSecond(newSecond);\n  let changeMeridiem = (newMeridiem: string) =>\n    setMeridiem(newMeridiem as Meridiem);\n\n  let checkHour = () => {\n    !isHoursFormatValid(hour, format) && setHour('12');\n  };\n  let checkMinute = () => {\n    !isMinutesFormatValid(minute) && setMinute('00');\n  };\n  let checkSecond = () => {\n    !isSecondsFormatValid(second) && setSecond('00');\n  };\n  let checkMeridiem = () => {\n    !(meridiem === 'AM' || meridiem === 'PM') && setMeridiem('AM');\n  };\n\n  return (\n    <View style={{ flexDirection: 'row' }}>\n      <TimePickerInput\n        format={format}\n        value={hour}\n        placeholder=\"hh\"\n        onChangeText={changeHour}\n        onBlur={checkHour}\n      />\n      <TimePickerInput\n        format={format}\n        value={minute}\n        placeholder=\"mm\"\n        onChangeText={changeMinute}\n        onBlur={checkMinute}\n      />\n      <TimePickerInput\n        format={format}\n        value={second}\n        placeholder=\"ss\"\n        onChangeText={changeSecond}\n        onBlur={checkSecond}\n      />\n      {format === '12' && (\n        <TimePickerInput\n          placeholder=\"am/pm\"\n          format={format}\n          value={meridiem}\n          onChangeText={changeMeridiem}\n          onBlur={checkMeridiem}\n        />\n      )}\n    </View>\n  );\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/exoflex/lib/module/components/TimePicker/TimePicker.native.js b/node_modules/exoflex/lib/module/components/TimePicker/TimePicker.native.js
new file mode 100644
index 0000000..2a595a4
--- /dev/null
+++ b/node_modules/exoflex/lib/module/components/TimePicker/TimePicker.native.js
@@ -0,0 +1,2 @@
+import _slicedToArray from"@babel/runtime/helpers/slicedToArray";var _jsxFileName="/Users/Me/projects/opensource/infra/packages/exoflex/src/components/TimePicker/TimePicker.tsx";import React,{useState,useMemo}from'react';import{TouchableOpacity}from'react-native';import DateTimePicker from'react-native-modal-datetime-picker';import TextInput from'../TextInput/TextInput';import useTheme from'../../helpers/useTheme';import{createTimeForDisplay}from'../../helpers/displayTime';export default function TimePicker(props){var _themeStyle$timePicke;var _props$format=props.format,format=_props$format===void 0?'12':_props$format,date=props.date,_props$placeholder=props.placeholder,placeholder=_props$placeholder===void 0?'':_props$placeholder,_props$title=props.title,title=_props$title===void 0?'':_props$title,locale=props.locale,onChangeTime=props.onChangeTime,style=props.style;var _useTheme=useTheme(),colors=_useTheme.colors,themeStyle=_useTheme.style;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),visible=_useState2[0],setVisible=_useState2[1];var use24Hour=format==='24';var toggleModal=function toggleModal(){return setVisible(!visible);};var changeDate=function changeDate(d){var newDate=d.toISOString();toggleModal();onChangeTime&&onChangeTime(newDate);};var displayTime=useMemo(function(){return createTimeForDisplay(date,format);},[date,format]);return React.createElement(React.Fragment,null,React.createElement(TouchableOpacity,{activeOpacity:0.7,onPress:toggleModal,__source:{fileName:_jsxFileName,lineNumber:40}},React.createElement(TextInput,{disabled:true,mode:"outlined",label:"Time",value:displayTime,placeholder:placeholder,pointerEvents:"none",containerStyle:{borderColor:colors.border,backgroundColor:colors.surface},style:[{backgroundColor:colors.surface},themeStyle==null?void 0:(_themeStyle$timePicke=themeStyle.timePicker)==null?void 0:_themeStyle$timePicke.style,style],__source:{fileName:_jsxFileName,lineNumber:41}})),React.createElement(DateTimePicker,{date:new Date(date),headerTextIOS:title,is24Hour:use24Hour,locale:locale||use24Hour?'en-GB':'en-US',isVisible:visible,mode:"time",onConfirm:changeDate,onCancel:toggleModal,__source:{fileName:_jsxFileName,lineNumber:59}}));}
+//# sourceMappingURL=TimePicker.js.map
\ No newline at end of file
diff --git a/node_modules/exoflex/lib/module/components/TimePicker/TimePicker.native.js.map b/node_modules/exoflex/lib/module/components/TimePicker/TimePicker.native.js.map
new file mode 100644
index 0000000..456c50b
--- /dev/null
+++ b/node_modules/exoflex/lib/module/components/TimePicker/TimePicker.native.js.map
@@ -0,0 +1 @@
+{"version":3,"sources":["TimePicker.tsx"],"names":["React","useState","useMemo","TouchableOpacity","DateTimePicker","TextInput","useTheme","createTimeForDisplay","TimePicker","props","format","date","placeholder","title","locale","onChangeTime","style","colors","themeStyle","visible","setVisible","use24Hour","toggleModal","changeDate","d","newDate","toISOString","displayTime","borderColor","border","backgroundColor","surface","timePicker","Date"],"mappings":"kLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,OAA1B,KAAyC,OAAzC,CACA,OAASC,gBAAT,KAAiC,cAAjC,CACA,MAAOC,CAAAA,cAAP,KAA2B,oCAA3B,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CAGA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,OAASC,oBAAT,KAAqC,2BAArC,CAGA,cAAe,SAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA4C,6CASrDA,KATqD,CAEvDC,MAFuD,CAEvDA,MAFuD,wBAE9C,IAF8C,eAGvDC,IAHuD,CASrDF,KATqD,CAGvDE,IAHuD,oBASrDF,KATqD,CAIvDG,WAJuD,CAIvDA,WAJuD,6BAIzC,EAJyC,iCASrDH,KATqD,CAKvDI,KALuD,CAKvDA,KALuD,uBAK/C,EAL+C,cAMvDC,MANuD,CASrDL,KATqD,CAMvDK,MANuD,CAOvDC,YAPuD,CASrDN,KATqD,CAOvDM,YAPuD,CAQvDC,KARuD,CASrDP,KATqD,CAQvDO,KARuD,eAUrBV,QAAQ,EAVa,CAUnDW,MAVmD,WAUnDA,MAVmD,CAUpCC,UAVoC,WAU3CF,KAV2C,eAY7Bf,QAAQ,CAAC,KAAD,CAZqB,wCAYpDkB,OAZoD,eAY3CC,UAZ2C,eAczD,GAAIC,CAAAA,SAAS,CAAGX,MAAM,GAAK,IAA3B,CAEA,GAAIY,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAMF,CAAAA,UAAU,CAAC,CAACD,OAAF,CAAhB,EAAlB,CACA,GAAII,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,CAAD,CAAa,CAC5B,GAAIC,CAAAA,OAAO,CAAGD,CAAC,CAACE,WAAF,EAAd,CACAJ,WAAW,GACXP,YAAY,EAAIA,YAAY,CAACU,OAAD,CAA5B,CACD,CAJD,CAKA,GAAIE,CAAAA,WAAW,CAAGzB,OAAO,CAAC,iBAAMK,CAAAA,oBAAoB,CAACI,IAAD,CAAOD,MAAP,CAA1B,EAAD,CAA2C,CAClEC,IADkE,CAElED,MAFkE,CAA3C,CAAzB,CAKA,MACE,yCACE,oBAAC,gBAAD,EAAkB,aAAa,CAAE,GAAjC,CAAsC,OAAO,CAAEY,WAA/C,iDACE,oBAAC,SAAD,EACE,QAAQ,KADV,CAEE,IAAI,CAAC,UAFP,CAGE,KAAK,CAAC,MAHR,CAIE,KAAK,CAAEK,WAJT,CAKE,WAAW,CAAEf,WALf,CAME,aAAa,CAAC,MANhB,CAOE,cAAc,CAAE,CACdgB,WAAW,CAAEX,MAAM,CAACY,MADN,CAEdC,eAAe,CAAEb,MAAM,CAACc,OAFV,CAPlB,CAWE,KAAK,CAAE,CACL,CAAED,eAAe,CAAEb,MAAM,CAACc,OAA1B,CADK,CAELb,UAFK,qCAELA,UAAU,CAAEc,UAFP,eAEL,sBAAwBhB,KAFnB,CAGLA,KAHK,CAXT,iDADF,CADF,CAoBE,oBAAC,cAAD,EACE,IAAI,CAAE,GAAIiB,CAAAA,IAAJ,CAAStB,IAAT,CADR,CAEE,aAAa,CAAEE,KAFjB,CAIE,QAAQ,CAAEQ,SAJZ,CAME,MAAM,CAAEP,MAAM,EAAIO,SAAV,CAAsB,OAAtB,CAAgC,OAN1C,CAOE,SAAS,CAAEF,OAPb,CAQE,IAAI,CAAC,MARP,CASE,SAAS,CAAEI,UATb,CAUE,QAAQ,CAAED,WAVZ,iDApBF,CADF,CAmCD","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport DateTimePicker from 'react-native-modal-datetime-picker';\nimport TextInput from '../TextInput/TextInput';\n\nimport { HourFormat } from '../../helpers/timeChecker';\nimport useTheme from '../../helpers/useTheme';\nimport { createTimeForDisplay } from '../../helpers/displayTime';\nimport { TimePickerProps } from './types';\n\nexport default function TimePicker(props: TimePickerProps) {\n  let {\n    format = '12' as HourFormat,\n    date,\n    placeholder = '',\n    title = '',\n    locale,\n    onChangeTime,\n    style,\n  } = props;\n  let { colors, style: themeStyle } = useTheme();\n\n  let [visible, setVisible] = useState(false);\n\n  let use24Hour = format === '24';\n\n  let toggleModal = () => setVisible(!visible);\n  let changeDate = (d: Date) => {\n    let newDate = d.toISOString();\n    toggleModal();\n    onChangeTime && onChangeTime(newDate);\n  };\n  let displayTime = useMemo(() => createTimeForDisplay(date, format), [\n    date,\n    format,\n  ]);\n\n  return (\n    <>\n      <TouchableOpacity activeOpacity={0.7} onPress={toggleModal}>\n        <TextInput\n          disabled\n          mode=\"outlined\"\n          label=\"Time\"\n          value={displayTime}\n          placeholder={placeholder}\n          pointerEvents=\"none\"\n          containerStyle={{\n            borderColor: colors.border,\n            backgroundColor: colors.surface,\n          }}\n          style={[\n            { backgroundColor: colors.surface },\n            themeStyle?.timePicker?.style,\n            style,\n          ]}\n        />\n      </TouchableOpacity>\n      <DateTimePicker\n        date={new Date(date)}\n        headerTextIOS={title}\n        // NOTE: Android only\n        is24Hour={use24Hour}\n        // NOTE: If locale is not provided, use `en-GB` for 12h format\n        locale={locale || use24Hour ? 'en-GB' : 'en-US'}\n        isVisible={visible}\n        mode=\"time\"\n        onConfirm={changeDate}\n        onCancel={toggleModal}\n      />\n    </>\n  );\n}\n"]}
\ No newline at end of file
