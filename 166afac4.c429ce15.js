(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{176:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return p}));var r=t(1),i=t(8),a=(t(0),t(250)),o={id:"accordion",title:"Accordion"},c={id:"accordion",title:"Accordion",description:"A component used to display an/multiple expandable list item.",source:"@site/docs/accordion.md",permalink:"/exoflex/docs/accordion",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/accordion.md",sidebar:"someSidebar",previous:{title:"Contributing",permalink:"/exoflex/docs/contributing"},next:{title:"Activity Indicator",permalink:"/exoflex/docs/activityIndicator"}},l=[{value:"Usage",id:"usage",children:[]},{value:"Props",id:"props",children:[{value:"sections (required)",id:"sections-required",children:[]},{value:"useRipple",id:"useripple",children:[]},{value:"renderHeader (required)",id:"renderheader-required",children:[]},{value:"renderContent (required)",id:"rendercontent-required",children:[]},{value:"renderFooter",id:"renderfooter",children:[]},{value:"renderSectionTitle",id:"rendersectiontitle",children:[]},{value:"renderIconLeft",id:"rendericonleft",children:[]},{value:"renderIconRight",id:"rendericonright",children:[]},{value:"onChange",id:"onchange",children:[]},{value:"activeSections",id:"activesections",children:[]},{value:"underlayColor",id:"underlaycolor",children:[]},{value:"touchableComponent",id:"touchablecomponent",children:[]},{value:"touchableProps",id:"touchableprops",children:[]},{value:"disabled",id:"disabled",children:[]},{value:"align",id:"align",children:[]},{value:"duration",id:"duration",children:[]},{value:"onAnimationEnd",id:"onanimationend",children:[]},{value:"expandFromBottom",id:"expandfrombottom",children:[]},{value:"expandMultiple",id:"expandmultiple",children:[]},{value:"sectionContainerStyle",id:"sectioncontainerstyle",children:[]},{value:"containerStyle",id:"containerstyle",children:[]},{value:"headerContainerStyle",id:"headercontainerstyle",children:[]},{value:"headerStyle",id:"headerstyle",children:[]},{value:"iconStyle",id:"iconstyle",children:[]}]}],b={rightToc:l};function p(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},b,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"A component used to display an/multiple expandable list item."),Object(a.b)("h2",{id:"usage"},"Usage"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-tsx",metastring:"live",live:!0}),"function AccordionExample(props) {\n  const drawerImage = {\n    uri:\n      'https://raw.githubusercontent.com/kodefox/infra/master/packages/exoflex/example/assets/drawer_header.png',\n  };\n\n  const SECTIONS = [\n    {\n      title: 'FIRST SECTION',\n      text: 'This is the first section content',\n      image: drawerImage,\n    },\n    {\n      title: 'SECOND SECTION',\n      text: 'This is the second section content',\n      image: drawerImage,\n    },\n  ];\n\n  let [activeSections, setActiveSections] = useState([]);\n\n  return (\n    <View>\n      <Accordion\n        sections={SECTIONS}\n        activeSections={activeSections}\n        onChange={(sections) => setActiveSections(sections)}\n        titleContainerStyle={{\n          justifyContent: 'center',\n          alignItems: 'center',\n          borderRadius: 4,\n        }}\n        titleStyle={{ fontWeight: 'bold' }}\n        renderContent={(content, index) => (\n          <View style={{ padding: 16 }}>\n            <View\n              style={{\n                padding: 16,\n                backgroundColor: '#e8ecf3',\n                flexDirection: 'row',\n                alignItems: 'center',\n                borderRadius: 4,\n              }}\n            >\n              <Image\n                source={content.image}\n                style={{ width: 50, height: 50, marginRight: 5 }}\n              />\n              <Text style={{ flex: 1 }}>{content.text}</Text>\n            </View>\n            {index === 0 && (\n              <>\n                <TextInput\n                  label=\"First Name\"\n                  containerStyle={{ marginVertical: 10 }}\n                />\n                <TextInput\n                  label=\"Last Name\"\n                  containerStyle={{ marginVertical: 10 }}\n                />\n                <TextInput\n                  label=\"Address\"\n                  containerStyle={{ marginVertical: 10 }}\n                />\n                <Button onPress={() => setActiveSections([1])}>next</Button>\n              </>\n            )}\n          </View>\n        )}\n        sectionContainerStyle={{\n          borderWidth: 1,\n          borderColor: '#454545',\n          marginVertical: 5,\n          borderRadius: 4,\n        }}\n      />\n    </View>\n  );\n}\n")),Object(a.b)("h2",{id:"props"},"Props"),Object(a.b)("h3",{id:"sections-required"},"sections (required)"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"Array<T extends { title: string }>"),Object(a.b)("br",{parentName:"p"}),"\n","An array of sections passed to the render methods. In order."),Object(a.b)("h3",{id:"useripple"},"useRipple"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"boolean"),Object(a.b)("br",{parentName:"p"}),"\n","Default: ",Object(a.b)("inlineCode",{parentName:"p"},"false"),Object(a.b)("br",{parentName:"p"}),"\n","Determine whether to use Material Ripple Effect or not."),Object(a.b)("h3",{id:"renderheader-required"},"renderHeader (required)"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"(content: T, index: number, isActive: boolean, sections: Array<T>) => React.ReactNode"),Object(a.b)("br",{parentName:"p"}),"\n","Default: ",Object(a.b)("inlineCode",{parentName:"p"},"Exoflex custom header"),Object(a.b)("br",{parentName:"p"}),"\n","A function that should return a renderable representing the header."),Object(a.b)("h3",{id:"rendercontent-required"},"renderContent (required)"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"(content: T, index: number, isActive: boolean, sections: Array<T>) => React.ReactNode"),Object(a.b)("br",{parentName:"p"}),"\n","A function that should return a renderable representing the content."),Object(a.b)("h3",{id:"renderfooter"},"renderFooter"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"(content: T, index: number, isActive: boolean, sections: Array<T>) => React.ReactNode"),Object(a.b)("br",{parentName:"p"}),"\n","A function that should return a renderable representing the footer."),Object(a.b)("h3",{id:"rendersectiontitle"},"renderSectionTitle"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"(content: T, index: number, isActive: boolean) => React.ReactNode"),Object(a.b)("br",{parentName:"p"}),"\n","A function that should return a renderable representing the title of the section outside the touchable element."),Object(a.b)("h3",{id:"rendericonleft"},"renderIconLeft"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"(animation: Animated.Value) => void")," | ",Object(a.b)("inlineCode",{parentName:"p"},"null"),Object(a.b)("br",{parentName:"p"}),"\n","Custom icon to be display on the left of the header."),Object(a.b)("h3",{id:"rendericonright"},"renderIconRight"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"(animation: Animated.Value) => void")," | ",Object(a.b)("inlineCode",{parentName:"p"},"null"),Object(a.b)("br",{parentName:"p"}),"\n","Default: ",Object(a.b)("inlineCode",{parentName:"p"},"Arrow Icon"),Object(a.b)("br",{parentName:"p"}),"\n","Custom icon to be display on the right of the header."),Object(a.b)("h3",{id:"onchange"},"onChange"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"(indexes: Array<number>) => void"),Object(a.b)("br",{parentName:"p"}),"\n","A function that is called when the currently active section(s) are updated."),Object(a.b)("h3",{id:"activesections"},"activeSections"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"Array<number>"),Object(a.b)("br",{parentName:"p"}),"\n","Control which indices in the sections array are currently open. If empty, closes all sections."),Object(a.b)("h3",{id:"underlaycolor"},"underlayColor"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"string"),Object(a.b)("br",{parentName:"p"}),"\n","Default: ",Object(a.b)("inlineCode",{parentName:"p"},"'black'"),Object(a.b)("br",{parentName:"p"}),"\n","The color of the underlay that will show through when tapping on headers."),Object(a.b)("h3",{id:"touchablecomponent"},"touchableComponent"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"(content: T, index: number, isActive: boolean) => React.ReactNode"),Object(a.b)("br",{parentName:"p"}),"\n","Default: ",Object(a.b)("inlineCode",{parentName:"p"},"TouchableOpacity"),Object(a.b)("br",{parentName:"p"}),"\n","The touchable component used in the Accordion."),Object(a.b)("h3",{id:"touchableprops"},"touchableProps"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"{ [key: string]: any }"),Object(a.b)("br",{parentName:"p"}),"\n","Properties for the touchableComponent."),Object(a.b)("h3",{id:"disabled"},"disabled"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"boolean"),Object(a.b)("br",{parentName:"p"}),"\n","Default: ",Object(a.b)("inlineCode",{parentName:"p"},"false"),Object(a.b)("br",{parentName:"p"}),"\n","Set whether the user can interact with the Accordion."),Object(a.b)("h3",{id:"align"},"align"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"'top'")," | ",Object(a.b)("inlineCode",{parentName:"p"},"'center'")," | ",Object(a.b)("inlineCode",{parentName:"p"},"'bottom'"),Object(a.b)("br",{parentName:"p"}),"\n","Default: ",Object(a.b)("inlineCode",{parentName:"p"},"'top'"),Object(a.b)("br",{parentName:"p"}),"\n","Alignment of the content when transitioning."),Object(a.b)("h3",{id:"duration"},"duration"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"number"),Object(a.b)("br",{parentName:"p"}),"\n","Default: ",Object(a.b)("inlineCode",{parentName:"p"},"300"),Object(a.b)("br",{parentName:"p"}),"\n","A function that should return a renderable representing the title of the section outside the touchable element."),Object(a.b)("h3",{id:"onanimationend"},"onAnimationEnd"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"() => void"),Object(a.b)("br",{parentName:"p"}),"\n","Default: ",Object(a.b)("inlineCode",{parentName:"p"},"() => {}"),Object(a.b)("br",{parentName:"p"}),"\n","Callback when the toggle animation is done. Useful to avoid heavy layouting work during the animation."),Object(a.b)("h3",{id:"expandfrombottom"},"expandFromBottom"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"boolean"),Object(a.b)("br",{parentName:"p"}),"\n","Expand content from the bottom instead of the top."),Object(a.b)("h3",{id:"expandmultiple"},"expandMultiple"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"boolean"),Object(a.b)("br",{parentName:"p"}),"\n","Default: ",Object(a.b)("inlineCode",{parentName:"p"},"false"),Object(a.b)("br",{parentName:"p"}),"\n","Allow more than one section to be expanded."),Object(a.b)("h3",{id:"sectioncontainerstyle"},"sectionContainerStyle"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"StyleProp<ViewStyle>"),Object(a.b)("br",{parentName:"p"}),"\n","Optional styling for the section container."),Object(a.b)("h3",{id:"containerstyle"},"containerStyle"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"StyleProp<ViewStyle>"),Object(a.b)("br",{parentName:"p"}),"\n","Optional styling for the Accordion container."),Object(a.b)("h3",{id:"headercontainerstyle"},"headerContainerStyle"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"StyleProp<ViewStyle>"),Object(a.b)("br",{parentName:"p"}),"\n","Optional styling for the Accordion header container."),Object(a.b)("h3",{id:"headerstyle"},"headerStyle"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"StyleProp<TextStyle>"),Object(a.b)("br",{parentName:"p"}),"\n","Optional styling for the Accordion header."),Object(a.b)("h3",{id:"iconstyle"},"iconStyle"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"StyleProp<ViewStyle>"),Object(a.b)("br",{parentName:"p"}),"\n","Optional styling for the Header icon."))}p.isMDXComponent=!0},250:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return m}));var r=t(0),i=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var b=i.a.createContext({}),p=function(e){var n=i.a.useContext(b),t=n;return e&&(t="function"==typeof e?e(n):c({},n,{},e)),t},d=function(e){var n=p(e.components);return i.a.createElement(b.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},s=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),d=p(t),s=r,m=d["".concat(o,".").concat(s)]||d[s]||u[s]||a;return t?i.a.createElement(m,c({ref:n},b,{components:t})):i.a.createElement(m,c({ref:n},b))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=s;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var b=2;b<a;b++)o[b]=t[b];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,t)}s.displayName="MDXCreateElement"}}]);