(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{175:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return b})),n.d(t,"default",(function(){return p}));var r=n(1),i=n(8),a=(n(0),n(250)),o={id:"button",title:"Button"},l={id:"button",title:"Button",description:"Button with three presets. Use within the `Provider` component to be able to change the button color as it depends on the theme.",source:"@site/docs/button.md",permalink:"/exoflex/docs/button",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/button.md",sidebar:"someSidebar",previous:{title:"Badge",permalink:"/exoflex/docs/badge"},next:{title:"Calendar",permalink:"/exoflex/docs/calendar"}},b=[{value:"Usage",id:"usage",children:[{value:"Basic",id:"basic",children:[]},{value:"Disabled",id:"disabled",children:[]},{value:"With Icon",id:"with-icon",children:[]}]},{value:"Props",id:"props",children:[{value:"children (required)",id:"children-required",children:[]},{value:"preset",id:"preset",children:[]},{value:"textPreset",id:"textpreset",children:[]},{value:"onPress",id:"onpress",children:[]},{value:"useRipple",id:"useripple",children:[]},{value:"disabled",id:"disabled-1",children:[]},{value:"loading",id:"loading",children:[]},{value:"icon",id:"icon",children:[]},{value:"uppercase",id:"uppercase",children:[]},{value:"contentStyle",id:"contentstyle",children:[]},{value:"style",id:"style",children:[]},{value:"labelStyle",id:"labelstyle",children:[]}]}],c={rightToc:b};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Button with three presets. Use within the ",Object(a.b)("inlineCode",{parentName:"p"},"Provider")," component to be able to change the button color as it depends on the theme."),Object(a.b)("h2",{id:"usage"},"Usage"),Object(a.b)("h3",{id:"basic"},"Basic"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-tsx",metastring:"live",live:!0}),'function BasicButton() {\n  return (\n    <Provider>\n      <Button\n        preset="primary"\n        onPress={() => {}}\n        style={{ marginVertical: 10 }}\n      >\n        Primary button\n      </Button>\n      <Button\n        preset="secondary"\n        onPress={() => {}}\n        style={{ marginVertical: 10 }}\n      >\n        Secondary button\n      </Button>\n      <Button\n        preset="invisible"\n        onPress={() => {}}\n        style={{ marginVertical: 10 }}\n      >\n        Invisible button\n      </Button>\n    </Provider>\n  );\n}\n')),Object(a.b)("h3",{id:"disabled"},"Disabled"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-tsx",metastring:"live",live:!0}),'function DisabledButton() {\n  return (\n    <Provider>\n      <Button\n        disabled\n        preset="primary"\n        onPress={() => {}}\n        style={{ marginVertical: 10 }}\n      >\n        Primary button\n      </Button>\n      <Button\n        disabled\n        preset="secondary"\n        onPress={() => {}}\n        style={{ marginVertical: 10 }}\n      >\n        Secondary button\n      </Button>\n      <Button\n        disabled\n        preset="invisible"\n        onPress={() => {}}\n        style={{ marginVertical: 10 }}\n      >\n        Invisible button\n      </Button>\n    </Provider>\n  );\n}\n')),Object(a.b)("h3",{id:"with-icon"},"With Icon"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-tsx",metastring:"live",live:!0}),'function WithIconButton() {\n  return (\n    <Provider>\n      <Button icon="home" onPress={() => {}} style={{ marginVertical: 10 }}>\n        With Icon\n      </Button>\n    </Provider>\n  );\n}\n')),Object(a.b)("h2",{id:"props"},"Props"),Object(a.b)("h3",{id:"children-required"},"children (required)"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"React.ReactNode"),Object(a.b)("br",{parentName:"p"}),"\n","Label text of the button"),Object(a.b)("h3",{id:"preset"},"preset"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"'primary'")," | ",Object(a.b)("inlineCode",{parentName:"p"},"'secondary'")," | ",Object(a.b)("inlineCode",{parentName:"p"},"'invisible'"),Object(a.b)("br",{parentName:"p"}),"\n","Default: ",Object(a.b)("inlineCode",{parentName:"p"},"'primary'"),Object(a.b)("br",{parentName:"p"}),"\n","Mode of the button. You can change the mode to adjust the styling to give it desired emphasis."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"primary")," - button with a background color and elevation shadow (high emphasis)"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"secondary")," - button with an outline (medium emphasis)"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"invisible")," - flat button without background or outline (low emphasis)")),Object(a.b)("h3",{id:"textpreset"},"textPreset"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"string"),Object(a.b)("br",{parentName:"p"}),"\n","Name of font preset that will be used on ",Object(a.b)("inlineCode",{parentName:"p"},"Text")," component inside the ",Object(a.b)("inlineCode",{parentName:"p"},"Button"),". This prop won't work with custom children."),Object(a.b)("h3",{id:"onpress"},"onPress"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"() => void"),Object(a.b)("br",{parentName:"p"}),"\n","Function that will be invoked when the ",Object(a.b)("inlineCode",{parentName:"p"},"Button")," pressed."),Object(a.b)("h3",{id:"useripple"},"useRipple"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"boolean"),Object(a.b)("br",{parentName:"p"}),"\n","Default: ",Object(a.b)("inlineCode",{parentName:"p"},"false"),Object(a.b)("br",{parentName:"p"}),"\n","Whether to use Material Ripple Effect or not. Only for Android and Web."),Object(a.b)("h3",{id:"disabled-1"},"disabled"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"boolean"),Object(a.b)("br",{parentName:"p"}),"\n","Whether to disable the press functionality."),Object(a.b)("h3",{id:"loading"},"loading"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"boolean"),Object(a.b)("br",{parentName:"p"}),"\n","Whether to show a loading indicator."),Object(a.b)("h3",{id:"icon"},"icon"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"string")," | ",Object(a.b)("inlineCode",{parentName:"p"},"number")," | ",Object(a.b)("inlineCode",{parentName:"p"},"ImageURISource")," | ",Object(a.b)("inlineCode",{parentName:"p"},"Array<ImageURISource>")," | ",Object(a.b)("inlineCode",{parentName:"p"},"({color: string, size: number}) => React.ReactNode"),Object(a.b)("br",{parentName:"p"}),"\n","Icon to display for the ",Object(a.b)("inlineCode",{parentName:"p"},"Button"),"."),Object(a.b)("h3",{id:"uppercase"},"uppercase"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"boolean"),Object(a.b)("br",{parentName:"p"}),"\n","Make the label text uppercased. Note that this won't work if you pass React elements as children."),Object(a.b)("h3",{id:"contentstyle"},"contentStyle"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"StyleProp<ViewStyle>"),Object(a.b)("br",{parentName:"p"}),"\n","Style of button's inner content."),Object(a.b)("h3",{id:"style"},"style"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"StyleProp<ViewStyle>"),Object(a.b)("br",{parentName:"p"}),"\n","Style of button's outer content."),Object(a.b)("h3",{id:"labelstyle"},"labelStyle"),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"StyleProp<TextStyle>"),Object(a.b)("br",{parentName:"p"}),"\n","Style for the button text. This is only work when the children is a string, not a custom component."))}p.isMDXComponent=!0},250:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var r=n(0),i=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=i.a.createContext({}),p=function(e){var t=i.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l({},t,{},e)),n},s=function(e){var t=p(e.components);return i.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},u=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,c=b(e,["components","mdxType","originalType","parentName"]),s=p(n),u=r,m=s["".concat(o,".").concat(u)]||s[u]||d[u]||a;return n?i.a.createElement(m,l({ref:t},c,{components:n})):i.a.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=u;var l={};for(var b in t)hasOwnProperty.call(t,b)&&(l[b]=t[b]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<a;c++)o[c]=n[c];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);